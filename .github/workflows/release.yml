name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install dependencies
      run: go mod tidy

    - name: Build binaries
      run: |
        mkdir dist
        GOOS=linux GOARCH=amd64 go build -o dist/yiff-linux-amd64 ./cmd/cli
        GOOS=darwin GOARCH=amd64 go build -o dist/yiff-darwin-amd64 ./cmd/cli
        GOOS=windows GOARCH=amd64 go build -o dist/yiff-windows-amd64.exe ./cmd/cli
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: yiff-binaries
        path: dist/yiff-*
        if-no-files-found: "error"
        overwrite: true
              

  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
      binaries-artifact-id: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        id: artifact-upload-step
        with:
          name: yiff-binaries-${{ github.ref }}
          file: dist/yiff*
          file_glob: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ steps.git-cliff.outputs.content }}
          
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: changelog
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: yiff-binaries-${{ github.ref }}
      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          file: binary_release.zip
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ needs.changelog.outputs.release_body }}    
          
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
        run: echo "Artifact ID from previous job is $OUTPUT1"
        
